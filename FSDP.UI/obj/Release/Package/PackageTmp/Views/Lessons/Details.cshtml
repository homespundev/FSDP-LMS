@model FSDP.DATA.Lesson

@{
    ViewBag.Title = Model.LessonTitle;
}


<div class="container page text-center">
    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
    {
        <h3 class="text-right">
            @Html.DisplayNameFor(model => model.IsActive)

            @Html.DisplayFor(model => model.IsActive)
        </h3>}
    <h1 class="text-center">@ViewBag.Title</h1>
    <h4>Course: @Model.Courses.CourseName</h4>
    <br />
    <div id="success">@ViewBag.Success @Html.Raw(ViewBag.NextLesson)</div>
    <div class="fail">@ViewBag.Fail</div>
    <div>

        <h2 class="text-center">
            @Html.DisplayFor(model => model.Introduction)
        </h2>
        <br />
        <div>
            @if (Model.VideoUrl != null)
            {
                <div id="player"></div>
                <br />}
        </div>

        <div>
            @if (Model.PdfFileName != null)//look at using String.IsNullOrEmpty()
            {
                @:Pdf: <a href="@Url.Content("~/Content/Lessons/Pdf/" + Model.PdfFileName)" target="_blank">View PDF</a>
                <br />}
        </div>


        @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
            {
            <br />
            <div class="row justify-content-md-center">
                <div class="col-md-4">
                    <h3><strong>@Html.DisplayNameFor(model => model.QuizQuestion)</strong></h3>
                    <br />
                    <h4>@Html.DisplayFor(model => model.QuizQuestion)</h4>
                </div>
                <div class="col-md-2">
                    <h3><strong>@Html.DisplayNameFor(model => model.QuizAnswer)</strong></h3>
                    <br />
                    <h4>@Html.DisplayFor(model => model.QuizAnswer)</h4>
                </div>
            </div> }
        <br />
    </div>

    @if (User.IsInRole("Employee"))
    {
        <div>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <hr />
                    <h3><strong>Quiz</strong></h3>
                    *Note all quiz answers are one word
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row justify-content-md-center">
                        <div class="form-group col-md-4">
                            <label class="control-label"><strong>Question:</strong></label><br /><br />
                            @Html.DisplayFor(model => model.QuizQuestion)
                        </div>
                        <div class="form-group col-md-4">
                            <div>
                                <label class="control-label"><strong>Answer:</strong></label><br />
                                <input style="display:inline-block" type="text" name="txtAnswer" />
                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            <div>
                                <input type="submit" value="Submit" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    <p>
        <br />
        @if (User.IsInRole("Admin"))
        {
            @*<a href="/Lessons/Edit/@Model.LessonID" class="btn btn-cancel">Edit</a>*@
            @Html.ActionLink("Edit", "Edit", "Lessons", new { id = Model.LessonID }, new { @class = "btn btn-cancel" })
        }
        @Html.ActionLink("Back to All Lessons", "Index", "Lessons", new { @class = "btn btn-default" })
        <a href="/Courses/Details/@Model.CourseID" class="btn btn-cancel">Back to Course Lessons</a>
    </p>
</div>
@section scripts{
    <script src="http://www.youtube.com/player_api"></script>

    <script>
        // create youtube player
        var player;
        var h = '@ViewBag.height';
        var w = '@ViewBag.width';
        function onYouTubePlayerAPIReady() {
            player = new YT.Player('player', {
                height: 360,
                width: 640,
                modestbranding: 1,
                videoId: '@ViewBag.VideoID',
                playerVars: {
                    rel: 0,
                    autoplay: 0,
                    disablekb: 0,
                    showsearch: 0,
                    showinfo: 0,
                    controls: 1,
                    fs: 1,
                    hd: 1,
                    html5: 1,
                    iv_load_policy: 3
                },
                events: {
                    onReady: onPlayerReady,
                    onStateChange: onPlayerStateChange
                }
            });
        }
        // autoplay video
        function onPlayerReady(event) {
            event.target.playVideo();
        }

        // when video ends
        function onPlayerStateChange(event) {
            if (event.data === 0) {
                //do something on end;
                alert('done');
            }
        }
    </script>
}