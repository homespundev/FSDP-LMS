@model FSDP.DATA.Lesson

@{
    ViewBag.Title = "Edit " + Model.LessonTitle;
}

<div class="container page">
    @using (Html.BeginForm("Edit", "Lessons", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h1 class="text-center">@ViewBag.Title</h1>
            <br />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.LessonID)
            @Html.HiddenFor(model => model.PdfFileName)
            @Html.HiddenFor(model => model.IsActive)

            @*<div class="form-group">
                @Html.LabelFor(model => model.LessonTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LessonTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LessonTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CourseID, "CourseID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CourseID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Introduction, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Introduction, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Introduction, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VideoUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VideoUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VideoUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PdfFileName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="lessonPdf" />
                    @Html.ValidationMessageFor(model => model.PdfFileName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.QuizQuestion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.QuizQuestion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QuizQuestion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.QuizAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.QuizAnswer, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QuizAnswer, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>*@
            <div class="row justify-content-md-center">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.LessonTitle, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.LessonTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LessonTitle, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.CourseID, "CourseID", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownList("CourseID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row justify-content-md-center">
                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.Introduction, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Introduction, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Introduction, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row justify-content-md-center">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.VideoUrl, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.VideoUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VideoUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PdfFileName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        <input type="file" name="lessonPdf" />
                        @Html.ValidationMessageFor(model => model.PdfFileName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row justify-content-md-center">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.QuizQuestion, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.QuizQuestion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.QuizQuestion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.QuizAnswer, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.QuizAnswer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.QuizAnswer, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row justify-content-md-center">
                <div class="form-group col-md-4 text-left">
                    <span>
                        <input type="submit" value="Edit" class="btn btn-default" />
                    </span>
                </div>
                <div class="col-md-4 text-right">
                    <span>
                        @Html.ActionLink("Cancel", "Index", "Lessons", new { @class = "btn btn-cancel" })
                    </span>
                </div>
            </div>
        </div>

    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
